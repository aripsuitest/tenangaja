generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id        String   @id
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model user {
  id          String   @id
  name        String
  email       String   @unique
  password    String
  phone       String?
  addr        String?
  profile_pic String?
  gender      String?
  role        String

  // Relasi
  worker      worker?
  orders      order[]
  payments    payment[]
  sentMessages     message[] @relation("MessageSender")
  receivedMessages message[] @relation("MessageReceiver")
}

model category {
  id             String   @id
  name           String
  image          String?
  description    String?
  subcategory    subcategory[]
  workerCategory workerCategory[]
}

model subcategory {
  id          String   @id
  name        String
  categoryId  String
  category    category @relation(fields: [categoryId], references: [id])
}

model worker {
  id             String   @id
  userId         String   @unique // Worker-user relasi 1:1
  description    String?
  status         String
  banner         String?
  user           user     @relation(fields: [userId], references: [id])
  workerCategory workerCategory[]
  orders         order[]
}

model workerCategory {
  id          String   @id
  workerId    String
  categoryId  String
  worker      worker   @relation(fields: [workerId], references: [id])
  category    category @relation(fields: [categoryId], references: [id])
}

model order {
  id             String   @id
  userId         String
  workerId       String
  status         String
  date           DateTime @default(now())
  notes          String?
  budget         Float
  userConfirmed  Boolean?
  deadline       Int?
  user           user     @relation(fields: [userId], references: [id])
  worker         worker   @relation(fields: [workerId], references: [id])
  payment        payment?
}

model payment {
  id         String   @id
  orderId    String   @unique // Relasi payment-order 1:1
  userId     String
  method     String
  status     String
  paidAt     DateTime?
  amount     Float
  order      order    @relation(fields: [orderId], references: [id])
  user       user     @relation(fields: [userId], references: [id])
}

model message {
  id          String   @id
  senderId    String
  receiverId  String
  message     String
  read        Boolean  @default(false)
  createdAt   DateTime @default(now())
  sender      user     @relation("MessageSender", fields: [senderId], references: [id])
  receiver    user     @relation("MessageReceiver", fields: [receiverId], references: [id])
}
